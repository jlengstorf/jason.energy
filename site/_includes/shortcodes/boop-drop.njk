<canvas class="boop-drop"></canvas>

{% block scripts %}
<script src="https://cdnjs.cloudflare.com/ajax/libs/matter-js/0.10.0/matter.min.js"></script>
<script type="module">
const world = document.querySelector(".boop-drop");
const { Engine, Render, Runner, World, Bodies } = Matter;

const heroBlock = document.querySelector('.hero-block');
const { width, height } = heroBlock.getBoundingClientRect();

function createBall() {
  const ball = Bodies.circle(Math.round(Math.random() * width), -30, 25, {
    angle: Math.PI * (Math.random() * 2 - 1),
    friction: 0.001,
    frictionAir: 0.01,
    restitution: 0.8,
    render: {
      sprite: {
        texture: "https://static-cdn.jtvnw.net/emoticons/v1/301299185/2.0"
      }
    }
  });

  return ball;
}

const engine = Engine.create();
const runner = Runner.create();
const render = Render.create({
  canvas: world,
  engine: engine,
  options: {
    width,
    height,
    background: "transparent",
    wireframes: false
  }
});

const boundaryOptions = {
  isStatic: true,
  render: {
    fillStyle: "transparent",
    strokeStyle: "transparent"
  }
};
const ground = Bodies.rectangle(width / 2, height, width + 20, 4, boundaryOptions);
const leftWall = Bodies.rectangle(0, height / 2, 4, height, boundaryOptions);
const rightWall = Bodies.rectangle(width, height / 2, 4, height, boundaryOptions);

Render.run(render);
Runner.run(runner, engine);

World.add(engine.world, [ground, leftWall, rightWall]);

const addBoop = (sound = true) => {
  if (sound) {
    window.playSoundEffect('boop');
  }

  const boop = createBall();
  World.add(engine.world, [boop]);
};

window.addBoop = addBoop;

addBoop(false);
</script>
{% endblock %}
