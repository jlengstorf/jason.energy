---
import { Image } from '@unpic/astro';

const media = [
	{
		img: {
			src: '/v1743826720/jason.energy/v2/219-244A5994.jpg',
			alt: 'Jason Lengstorf smiling.',
		},
		photographer: {
			name: 'Solo',
			site: 'https://www.instagram.com/_shotsbysolo/',
		},
	},
	{
		img: {
			src: '/v1743826151/jason.energy/v2/jason-lengstorf-jh-color-03.jpg',
			alt: 'Jason Lengstorf on a colored background, looking off to his left',
		},
		photographer: {
			name: 'Jason Hill',
			site: 'https://jasonhillphoto.com',
		},
	},
	{
		img: {
			src: '/v1743824433/jason.energy/v2/jason-lengstorf-jh-headshot-03.jpg',
			alt: 'Jason Lengstorf sitting at a table with a hand to his head. It looks moody, like maybe he’s a tough guy. (He’s not.)',
		},
		photographer: {
			name: 'Jason Hill',
			site: 'https://jasonhillphoto.com',
		},
	},
	{
		img: {
			src: '/v1743829346/jason.energy/v2/BA1_8208.jpg',
			alt: 'Jason Lengstorf on the set of Web Dev Challenge.',
		},
		photographer: {
			name: 'Jason Hill',
			site: 'https://jasonhillphoto.com',
		},
	},
	{
		img: {
			src: '/v1743826157/jason.energy/v2/jason-lengstorf-jh-headshot-01.jpg',
			alt: 'Jason Lengstorf reaching up toward his hat, looking directly into the camera.',
		},
		photographer: {
			name: 'Jason Hill',
			site: 'https://jasonhillphoto.com',
		},
	},
	{
		img: {
			src: '/v1743826166/jason.energy/v2/20220225_Jason_Lengstorf_Headshot_0568.jpg',
			alt: 'Jason Lengstorf smiling and standing in front of an alley.',
		},
		photographer: {
			name: 'Amaren Colosi',
			site: 'https://www.amarencolosi.work',
		},
	},
	{
		img: {
			src: '/v1743829538/jason.energy/v2/BA1_7775_1.jpg',
			alt: 'Jason Lengstorf on the set of Web Dev Challenge.',
		},
		photographer: {
			name: 'Jason Hill',
			site: 'https://jasonhillphoto.com',
		},
	},
	{
		img: {
			src: '/v1743823540/jason.energy/v2/jason-lengstorf-wdc-s2e1-jasonhill.jpg',
			alt: 'Jason Lengstorf on the set of Web Dev Challenge',
		},
		photographer: {
			name: 'Jason Hill',
			site: 'https://jasonhillphoto.com',
		},
	},
	{
		img: {
			src: '/v1743829790/jason.energy/v2/jason-lengstorf-jh-color-01.jpg',
			alt: 'Jason Lengstorf on a brightly colored background looking severe.',
		},
		photographer: {
			name: 'Jason Hill',
			site: 'https://jasonhillphoto.com',
		},
	},
	{
		img: {
			src: '/v1743828769/jason.energy/v2/BA1_4558.jpg',
			alt: 'Jason Lengstorf holding hot sauce bottles in front of the Leet Heat logo',
		},
		photographer: {
			name: 'Jason Hill',
			site: 'https://jasonhillphoto.com',
		},
	},
	{
		img: {
			src: '/v1743828106/jason.energy/v2/jason-lengstorf-jh-linen-02.jpg',
			alt: 'Jason Lengstorf wearing a light colored linen outfit on a dark background.',
		},
		photographer: {
			name: 'Jason Hill',
			site: 'https://jasonhillphoto.com',
		},
	},
	{
		img: {
			src: '/v1743880312/jason.energy/v2/DSC00027.jpg',
			alt: 'Jason Lengstorf in a hat with pink trim wearing a hoodie with bright colored accents, in front of a background that has multi-colored lights shining on it.',
		},
		photographer: {
			name: 'Jason Lengstorf',
			site: 'https://jason.energy',
		},
	},
];
---

<section>
	<ul>
		<li class="info">
			<h2>Media Kit</h2>
			<p>
				Any of these photos can be used for speaker photos, and other media.
				Photographer credit must be included.
			</p>
		</li>

		{
			media.map((photo) => {
				return (
					<li>
						<figure
							class="photo-container"
							data-src={photo.img.src}
							data-alt={photo.img.alt}
							data-photographer={photo.photographer.name}
							data-photographer-site={photo.photographer.site}
							role="listitem"
							tabindex="0"
						>
							<Image
								src={`https://res.cloudinary.com/jlengstorf/image/upload/f_auto/q_auto/w_500,ar_1,c_fill,g_face${photo.img.src}`}
								alt={photo.img.alt}
								aspectRatio={1}
								width={500}
							/>
							<figcaption>
								<p>click for download options and details</p>
							</figcaption>
						</figure>
					</li>
				);
			})
		}
	</ul>
</section>

<dialog id="media" popover>
	<button id="close-modal">&times; close</button>

	<img src="" alt="" class="preview" />

	<div class="options">
		<a href="#" class="thumb">thumbnail crop</a>
		<a href="#" class="web">web resolution</a>
		<a href="#" class="full">full resolution</a>
		<a href="" class="photographer"> Photo by </a>
	</div>
</dialog>

<script>
	const photos = document.querySelectorAll(
		'.photo-container',
	) as NodeListOf<HTMLAreaElement>;
	const dialog = document.querySelector('#media') as HTMLDialogElement;
	const closeBtn = document.querySelector('#close-modal');

	const baseUrl = 'https://res.cloudinary.com/jlengstorf/image/upload';
	const previewTransformations = '/f_auto/q_auto/w_1200,c_fill,g_face';
	const thumbTransformations = '/f_auto/q_auto/ar_1,w_400,c_thumb,g_face';
	const webTransformations = '/f_auto/q_auto/w_1600';

	const resetImageElements = () => {
		const preview = dialog.querySelector('.preview') as HTMLImageElement;

		preview.src = '';

		dialog.close();
	};

	closeBtn?.addEventListener('click', resetImageElements);
	closeBtn?.addEventListener('keypress', resetImageElements);

	photos.forEach((el) => {
		const src = el.dataset?.src;
		const alt = el.dataset?.alt;
		const photographerName = el.dataset?.photographer;
		const photographerSite = el.dataset?.photographerSite;

		const openModal = () => {
			const preview = dialog.querySelector('.preview') as HTMLImageElement;
			const thumb = dialog.querySelector('.thumb') as HTMLAnchorElement;
			const web = dialog.querySelector('.web') as HTMLAnchorElement;
			const full = dialog.querySelector('.full') as HTMLAnchorElement;
			const photographer = dialog.querySelector(
				'.photographer',
			) as HTMLAnchorElement;

			preview.setAttribute('src', baseUrl + previewTransformations + src);
			preview.setAttribute('alt', alt ?? '');
			thumb.setAttribute('href', baseUrl + thumbTransformations + src);
			web.setAttribute('href', baseUrl + webTransformations + src);
			full.setAttribute('href', baseUrl + src);

			photographer.setAttribute('href', photographerSite ?? '');
			photographer.textContent = `photo: ${photographerName}`;

			dialog.showModal();
		};

		el.addEventListener('click', openModal);
		el.addEventListener('keypress', openModal);
	});
</script>

<style>
	section {
		--columns: 2;

		container: media / inline-size;
		margin-inline: auto;
		max-inline-size: 2400px;
		padding: 0 4px 4px;

		ul {
			display: grid;
			gap: 4px;
			grid-template-columns: repeat(
				var(--columns),
				calc(
					(min(2400px, 100cqi) - (var(--columns) + 1) * 4px) / var(--columns)
				)
			);
			list-style: none;
			margin: 0;
			padding: 0;

			@media (min-width: 750px) {
				--columns: 3;
			}

			@media (min-width: 1000px) {
				--columns: 4;
			}

			@media (min-width: 1480px) {
				--columns: 6;
			}
		}
	}

	.info {
		background: var(--white);
		border-radius: 3px;
		color: var(--orange);
		display: flex;
		flex-direction: column;
		gap: 8px;
		grid-column: span 2;
		grid-row-start: 1;
		justify-content: end;
		min-block-size: calc(
			(100cqi - (var(--columns) + 1) * 4px) / var(--columns)
		);
		padding: 30px;

		@media (min-width: 750px) {
			grid-column: span 1;
			grid-row-start: 2;
		}

		@media (min-width: 1480px) {
			grid-column-start: 3;
			grid-row-start: 1;
		}

		h2 {
			line-height: 1;
			margin: 0;
		}

		p {
			margin: 0;
		}
	}

	li {
		&:nth-of-type(12) {
			display: block;

			@media (min-width: 750px) {
				display: none;
			}
		}
	}

	figure {
		aspect-ratio: 1;
		margin: 0;
		position: relative;

		img {
			block-size: 100%;
			border-radius: 3px;
			display: block;
			inset: 0;
			margin: 0;
			max-inline-size: 100%;
			position: absolute;
			z-index: 1;
		}

		figcaption {
			display: flex;
			font-size: 0.75rem;
			inline-size: 100%;
			inset-block-end: 10px;
			justify-content: center;
			position: absolute;
			transition: 150ms linear opacity;
			z-index: 10;

			@media (any-hover: hover) {
				opacity: 0;
			}

			p {
				color: var(--gray-100);
				backdrop-filter: blur(6px);
				background: color-mix(in oklch, var(--gray-600) 50%, transparent);
				border-radius: 3px;
				margin: 0;
				padding: 4px 8px;
				position: relative;
				text-decoration: none;
				z-index: 10;
			}
		}

		@media (any-hover: none) {
			figcaption {
				align-items: end;
				display: flex;
				justify-content: center;
				inset: 0;
				padding: 10px;
			}

			a.full-res {
				inset: 0;
				opacity: 0;
				position: absolute;
			}
		}

		@media (any-hover: hover) {
			&::after {
				background: color-mix(in oklch, var(--purple) 80%, transparent);
				block-size: 100%;
				content: '';
				display: block;
				inset: 0;
				mix-blend-mode: multiply;
				opacity: 0.5;
				position: relative;
				transition: 150ms linear opacity;
				z-index: 5;
			}

			&:is(:hover, :focus-within) {
				figcaption {
					opacity: 1;
				}

				&::after {
					opacity: 0;
				}
			}
		}
	}

	@media (any-hover: hover) {
		:has(figure:hover, figure:focus-within) figure:not(:hover, :focus-within) {
			&::after {
				opacity: 1;
			}
		}
	}

	dialog {
		background: var(--gray-700);
		block-size: auto;
		border: 1px solid var(--gray-600) !important;
		border-radius: 7px;
		container: media-popover / size;
		inline-size: auto;
		max-block-size: 90dvb;
		max-inline-size: 90dvi;
		overflow: hidden;
		z-index: 1000;

		&[open] {
			display: grid;
			grid-template-rows: minmax(auto, calc(90dvb - 170px)) 50px;
		}

		img {
			block-size: 100%;
			border-radius: 3px;
			inline-size: 100%;
			object-fit: contain;
		}

		.options {
			align-items: end;
			display: flex;
			flex-wrap: wrap;
			gap: 4px;
			justify-content: space-between;
			padding: 4px 0 0;
		}

		a {
			background: var(--gray-900);
			border: 1px solid color-mix(in oklch, var(--white) 25%, transparent);
			border-radius: 3px;
			color: var(--gray-100);
			display: block;
			font-size: 0.75rem;
			font-weight: 400;
			inline-size: 100%;
			letter-spacing: 0.3em;
			line-height: 12px;
			padding: 10px;
			text-align: center;
			text-decoration: none;
			text-transform: uppercase;
			transition: 150ms all linear;

			&:is(:active, :focus, :hover) {
				background: color-mix(in oklch, var(--white) 85%, transparent);
				color: var(--gray-900);
				font-weight: 500;
				outline-offset: 4px;
			}
		}

		@media (min-width: 750px) {
			&[open] {
				grid-template-rows: minmax(auto, calc(90dvb - 50px)) 40px;
			}

			img {
				/* object-fit: cover; */
			}

			.options {
				flex-wrap: nowrap;
			}
		}
	}

	#close-modal {
		background: color-mix(in oklch, var(--gray-900) 75%, transparent);
		border: 1px solid color-mix(in oklch, var(--white) 25%, transparent);
		border-radius: 3px;
		color: var(--gray-200);
		cursor: pointer;
		font-size: 0.625em;
		font-weight: 300;
		inset-block-start: 8px;
		inset-inline-end: 8px;
		letter-spacing: 0.3em;
		padding: 8px 12px;
		position: absolute;
		text-transform: uppercase;
		transition: 150ms all linear;

		&:is(:active, :focus, :hover) {
			background: color-mix(in oklch, var(--white) 85%, transparent);
			color: var(--gray-900);
			font-weight: 600;
			outline-offset: 4px;
		}
	}
</style>

<style is:global>
	::backdrop {
		backdrop-filter: blur(3px);
		background: color-mix(in oklch, var(--gray-900) 70%, transparent);
	}
</style>
